substitutions:
  _WORKING_DIR: .
  _HELM_VERSION: v2.12.0
  _JENKINS_VERSION: '2.155'
  _CHART_VERSION: '0.25.0'
  _CLOUDSDK_COMPUTE_ZONE: asia-southeast1-b
  _CLOUDSDK_CONTAINER_CLUSTER: spin-cluster
  _HELM_RELEASE_NAME: jenkins
  _JSON_KEY_NAME: 'spinnaker-gcs-access-key.json'
steps:
- name: asia.gcr.io/${PROJECT_ID}/cloud-builders-community-helm:${_HELM_VERSION}
  dir: ${_WORKING_DIR}
  args:
  - 'bash'
  - '-c'
  - |
    set -xeo pipefail

    curl https://ipinfo.io/ip

    gsutil cp gs://${PROJECT_ID}-halyard-config/${_JSON_KEY_NAME} .

    kubectl create namespace jenkins --dry-run --output yaml | kubectl apply -f -

    kubectl --namespace jenkins create secret generic jenkins-secret \
      --from-literal=client-id=${_OAUTH_CLIENT_ID} \
      --from-literal=client-secret=${_OAUTH_CLIENT_SECRET}\
      --from-file=csr-key.json=${_JSON_KEY_NAME} \
      --dry-run --output yaml | kubectl apply -f -

    kubectl --namespace jenkins create secret generic jenkins-credentials \
      --from-file=credentials.xml \
      --dry-run --output yaml | kubectl apply -f -

    helm upgrade ${_HELM_RELEASE_NAME} stable/jenkins \
        --force \
        --install \
        --debug \
        --timeout 900 \
        --version  ${_CHART_VERSION} \
        --namespace jenkins \
        --set rbac.install=true \
        --set Master.Image=asia.gcr.io/${PROJECT_ID}/jenkins \
        --set Master.ImageTag=${_JENKINS_VERSION} \
        --values values-gke.yaml \
        --set-file Master.InitScripts.jenkinshost=jenkinshost.groovy \
        --set-file Master.InitScripts.rolestrategy=rolestrategy.groovy \
        --set-file Master.InitScripts.kubernetes=kubernetes.groovy \
        --set-file Master.InitScripts.googleoauth=googleoauth.groovy

  env:
  - 'TILLERLESS=true'
  - 'GCLOUD_PROJECT=${PROJECT_ID}'
  - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
timeout: 1800s
tags: ['jenkins']
